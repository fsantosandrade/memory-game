h1, span {
    text-shadow: 
        2px 2px 0px white, 
        -2px -2px 0px white, 
        2px -2px 0px white, 
        -2px 2px 0px white;
}

.container {
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-between;
    width: 100vw;
    height: 100vh;
    padding: 100px 50px;
    font-family: 'PixelFont';
     
    background: #000000;
    --gap: 5em;
    --line: 1px;
    --color: rgba(255, 255, 255, 0.2);

    background-image: linear-gradient(
      -90deg,
      transparent calc(var(--gap) - var(--line)),
      var(--color) calc(var(--gap) - var(--line) + 1px),
      var(--color) var(--gap)
    ),
    linear-gradient(
      0deg,
      transparent calc(var(--gap) - var(--line)),
      var(--color) calc(var(--gap) - var(--line) + 1px),
      var(--color) var(--gap)
    );
    background-size: var(--gap) var(--gap);

    & .menu {
        display: flex;
        height: 80%;
        flex-flow: column;
        justify-content: center;
        align-items: flex-start;
        margin-left: 80px;

        & h1 {
            font-size: 4.5rem;
            font-weight: bold;
            margin-bottom: 50px;
            animation: alternarCores 1s infinite;
        }

        & .options > .opts {
            display: flex;
            flex-flow: column nowrap;
            gap: 20px;

            & li {
                width: 400px;
                font-size: 3.3rem;
                font-weight: 600;
                transition: all .3s ease-out;
            }

            & li:hover {
                cursor: pointer;
                animation: alternarCores 1s infinite;
                transform: scale(1.1);
            }

            & .configs {
            display: flex;
            flex-flow: column;
            gap: 15px;
            padding: 15px;
            border-radius: 15px;
            
                & li {
                    display: flex;
                    flex-flow: row;
                    align-items: center;
                    gap: 10px;
                    font-size: 1.8rem;
                }
            }
        }
    }

    & .gif {
        display: flex;
        height: 90%;
        align-items: center;

        & video {
            width: 450px;
            border-radius: 50%;
            margin-right: 150px;
        }
    }
}

@keyframes alternarCores {
    0% { color: red; }
    25% { color: blue; }
    50% { color: green; }
    75% { color: yellow; }
    100% { color: red; }
}

.customCheckBoxHolder {
    margin: 5px;
    display: flex;
    flex-direction: column; /* Stack items vertically */
    align-items: center; /* Center items horizontally */
  }
  
  .customCheckBox {
    width: 200%; /* Ensures each checkbox has the same width */
    position: relative;
    overflow: hidden;
    cursor: pointer;
    user-select: none;
    padding: 2px 8px;
    background-color: rgba(0, 0, 0, 0.16);
    border-radius: 0px;
    color: rgba(255, 255, 255, 0.7);
    transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);
    transition-duration: 300ms;
    transition-property: color, background-color, box-shadow;
    display: flex;
    height: 32px;
    align-items: center;
    box-shadow:
      rgba(0, 0, 0, 0.15) 0px 2px 1px 0px inset,
      rgba(255, 255, 255, 0.17) 0px 1px 1px 0px;
    outline: none;
    justify-content: center;
    min-width: 55px;
  }
  
  .customCheckBox:hover {
    background-color: #2c2c2c;
    color: white;
    box-shadow:
      rgba(0, 0, 0, 0.23) 0px -4px 1px 0px inset,
      rgba(255, 255, 255, 0.17) 0px -1px 1px 0px,
      rgba(0, 0, 0, 0.17) 0px 2px 4px 1px;
  }
  
  .customCheckBox .inner {
    font-size: 18px;
    font-weight: 900;
    pointer-events: none;
    transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);
    transition-duration: 300ms;
    transition-property: transform;
    transform: translateY(0px);
  }
  
  .customCheckBox:hover .inner {
    transform: translateY(-2px);
  }
  
  .customCheckBoxWrapper {
    width: 100%; /* Ensures each wrapper takes full width of the holder */
  }
  
  /* Multiple Checkboxes can be chained together for a radio input */
  .customCheckBoxWrapper:first-of-type .customCheckBox {
    border-top-left-radius: 5px;
    border-top-right-radius: 5px;
    border-right: 0px;
  }
  
  .customCheckBoxWrapper:last-of-type .customCheckBox {
    border-bottom-right-radius: 5px;
    border-bottom-left-radius: 5px;
    border-left: 0px;
  }
  
  .customCheckBoxInput {
    display: none;
  }
  
  .customCheckBoxInput:checked + .customCheckBoxWrapper .customCheckBox {
    background-color: #2d6737;
    color: white;
    box-shadow:
      rgba(0, 0, 0, 0.23) 0px -4px 1px 0px inset,
      rgba(255, 255, 255, 0.17) 0px -1px 1px 0px,
      rgba(0, 0, 0, 0.17) 0px 2px 4px 1px;
  }
  
  .customCheckBoxInput:checked + .customCheckBoxWrapper .customCheckBox .inner {
    transform: translateY(-2px);
  }
  
  .customCheckBoxInput:checked + .customCheckBoxWrapper .customCheckBox:hover {
    background-color: #34723f;
    box-shadow:
      rgba(0, 0, 0, 0.26) 0px -4px 1px 0px inset,
      rgba(255, 255, 255, 0.17) 0px -1px 1px 0px,
      rgba(0, 0, 0, 0.15) 0px 3px 6px 2px;
  }
  
  .customCheckBoxWrapper .customCheckBox:hover .inner {
    transform: translateY(-2px);
  }